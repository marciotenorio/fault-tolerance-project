server.port=8080
spring.application.name=ecommerce
spring.docker.compose.enabled=false

# Fonte de dados
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=1234

# H2 Console (para debug)
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# Production
application.store.base-uri=http://store:8081
application.exchange.base-uri=http://exchange:8082
application.fidelity.base-uri=http://fidelity:8083

spring.cloud.discovery.client.simple.instances.exchange[0].service-id=exchange
spring.cloud.discovery.client.simple.instances.exchange[0].uri=http://exchange:8082
spring.cloud.discovery.client.simple.instances.exchange[1].service-id=exchange
spring.cloud.discovery.client.simple.instances.exchange[1].uri=http://exchange-2:8082

# Local
server.error.include-message=always

# application.store.base-uri=http://localhost:8081
# application.exchange.base-uri=http://localhost:8082
# application.fidelity.base-uri=http://localhost:8083

# spring.cloud.discovery.client.simple.instances.exchange[0].service-id=exchange
# spring.cloud.discovery.client.simple.instances.exchange[0].uri=http://localhost:8082
# spring.cloud.discovery.client.simple.instances.exchange[1].service-id=exchange
# spring.cloud.discovery.client.simple.instances.exchange[1].uri=http://localhost:8084

# Resilience
resilience4j.retry.instances.retryGetById.max-attempts=2

management.endpoints.web.exposure.include=circuitbreakers,health
management.endpoint.circuitbreakers.enabled=true

# Tamanho da janela deslizante. Define o número de requisições monitoradas.
resilience4j.circuitbreaker.instances.sellStoreService.slidingWindowSize=5
# Tipo da janela deslizante. Pode ser COUNT_BASED (com base no número de requisições) ou TIME_BASED (com base em intervalo de tempo).
resilience4j.circuitbreaker.instances.sellStoreService.slidingWindowType=COUNT_BASED
# Taxa de falha permitida antes de abrir o circuito (50% neste caso).
resilience4j.circuitbreaker.instances.sellStoreService.failureRateThreshold=50
# Tempo em milissegundos que o circuito permanecerá aberto antes de tentar se fechar novamente.
resilience4j.circuitbreaker.instances.sellStoreService.waitDurationInOpenState=5000
# Lista de exceções que o Circuit Breaker considera como falhas.
resilience4j.circuitbreaker.instances.sellStoreService.recordExceptions=org.springframework.web.client.HttpServerErrorException
# Número de requisições permitidas no estado "Half-Open" para verificar se o serviço se recuperou.
resilience4j.circuitbreaker.instances.sellStoreService.permittedNumberOfCallsInHalfOpenState=2
# Número mínimo de requisições necessárias para calcular a taxa de falha.
resilience4j.circuitbreaker.instances.sellStoreService.minimumNumberOfCalls=3
# Habilita a transição automática do estado "Open" para "Half-Open" após o tempo configurado.
resilience4j.circuitbreaker.instances.sellStoreService.automaticTransitionFromOpenToHalfOpenEnabled=true
